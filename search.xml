<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用Hexo+Butterfly+Github+Vercel搭建个人博客</title>
      <link href="/posts/2fe3da.html"/>
      <url>/posts/2fe3da.html</url>
      
        <content type="html"><![CDATA[<h1 id="从0到1搭建Hexo博客"><a href="#从0到1搭建Hexo博客" class="headerlink" title="从0到1搭建Hexo博客"></a>从0到1搭建Hexo博客</h1><h2 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h2><blockquote><p>注意：此网站博客采用Hexo+Butterfly+Github+Vercel搭建</p><p>Hexo框架+Butterfly主题，Vercel部署</p><p><a href="https://hexo.io/zh-cn/docs/">Hexo框架官方参考文档</a></p><p><a href="https://butterfly.js.org/">Butterfly主题</a></p></blockquote><table><thead><tr><th>准备</th><th>说明</th></tr></thead><tbody><tr><td>操作系统：Win10</td><td></td></tr><tr><td>Node环境安装</td><td><a href="https://nodejs.org/en">Node.js官网</a>，具体环境搭建可参考<a href="https://blog.csdn.net/qq_40618816/article/details/112566147?spm=1001.2014.3001.5501">CSDN博客-Node.js环境搭建部分</a></td></tr><tr><td>Hexo安装</td><td>控制台命令安装<code>npm install -g hexo-cli</code>，验证<code>hexo -v</code></td></tr><tr><td>Github账号、仓库创建</td><td>可自行前往<a href="https://github.com/">Github官网</a>进行邮箱注册Sign up<br><a href="###Github%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA">仓库创建</a></td></tr><tr><td>Git安装</td><td><a href="https://git-scm.com/">Git官网</a>，具体可参考<a href="https://blog.csdn.net/qq_40618816/article/details/113845354?spm=1001.2014.3001.5502">CSDN博客-Git下载安装部分</a></td></tr><tr><td>编辑器Webstorm &#x2F; VSCode</td><td></td></tr><tr><td>域名</td><td>自行购买</td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="Github仓库创建"><a href="#Github仓库创建" class="headerlink" title="Github仓库创建"></a>Github仓库创建</h3><ul><li>Github账户登录后，点击右上角<code>New repository</code>进行仓库创建</li><li>仓库名Repository name命名格式：<code>&lt;用户名&gt;.github.io</code>！！！</li><li>仓库可见性：<code>Public</code></li></ul><h3 id="Git配置用户名邮箱"><a href="#Git配置用户名邮箱" class="headerlink" title="Git配置用户名邮箱"></a>Git配置用户名邮箱</h3><p><a href="https://git-scm.com/">Git</a>下载安装后，鼠标右键进入 <code>Git bash</code>并配置用户名和邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;自己的用户名&quot; # 配置用户名</span><br><span class="line">git config --global user.email &quot;自己的邮箱&quot; # 配置邮箱</span><br><span class="line"></span><br><span class="line"># 查看配置 验证用户名和邮箱是否正确，参考下图</span><br><span class="line">git config -l</span><br></pre></td></tr></table></figure><p><img src="/images/article/hexo/git_username_password.png"></p><h3 id="Git连接至Github仓库"><a href="#Git连接至Github仓库" class="headerlink" title="Git连接至Github仓库"></a>Git连接至Github仓库</h3><p><strong>a.生成公钥</strong></p><p><code>Git bash</code>操作生成ssh公钥，在C盘用户文件夹下找到<code>.ssh文件夹</code> → 公钥<code>id_ras.pub</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成ssh公钥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;用户邮箱&quot;</span></span><br></pre></td></tr></table></figure><p><strong>b.SSH KEY配置到Github</strong></p><p>在Github中配置ssh密钥，进入Github，点击右上角头像进入<code>Settings</code>，左侧栏选择 <code>SSH and GPG keys</code>进行密钥配置</p><ul><li><code>Title</code>：自己对该密钥命名一个名字</li><li><code>Key type</code>：Authentication Key</li><li><code>Key</code>：填入上述公钥<code>id_ras.pub</code></li></ul><p><strong>c.测试连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git bash测试连接 =&gt; 判断是否出现账户信息</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="2-初始化Hexo博客项目"><a href="#2-初始化Hexo博客项目" class="headerlink" title="2.初始化Hexo博客项目"></a>2.初始化Hexo博客项目</h2><h3 id="2-1-项目初始化"><a href="#2-1-项目初始化" class="headerlink" title="2.1 项目初始化"></a>2.1 项目初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化项目 注意：以下出现的项目名需要自定义</span></span><br><span class="line">hexo init 项目名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目安装依赖</span></span><br><span class="line"><span class="built_in">cd</span> 项目名</span><br><span class="line">npm i</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动项目(以下两条命令均可) =&gt; 本地预览：http://localhost:4000/</span></span><br><span class="line">hexo server</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>初始化Hexo项目且安装依赖后，项目结构如下：</p><p><img src="/images/article/hexo/hexo%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png"></p><p>打开浏览器进行本地预览<a href="http://localhost:4000/">http://localhost:4000/</a> ，如下图，表示博客构建成功。</p><p><img src="/images/article/hexo/hexo%E5%88%9D%E5%A7%8B%E5%8C%96%E6%A0%B7%E4%BE%8B.png"></p><h3 id="2-2-项目一键部署"><a href="#2-2-项目一键部署" class="headerlink" title="2.2 项目一键部署"></a>2.2 项目一键部署</h3><p>项目的一键部署参考<a href="https://hexo.io/zh-cn/docs/github-pages">Hexo_Github Pages一键部署文档</a>，即将静态博客挂载到Github Pages。</p><p><strong>2.2.1 安装 hexo-deployer-git</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><strong>2.2.2 修改配置文件__config.yml</strong></p><p><code>_config.yml</code>是整个Hexo框架的配置文件，可根据<a href="https://hexo.io/zh-cn/docs/configuration">官方配置描述</a>自行配置。</p><p>修改<code>_config.yml</code>最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="comment"># 仓库地址 注意&lt;&gt;内需填写自己的Github相关用户名</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:&lt;Github的用户名&gt;/&lt;用户名.github.io&gt;.git</span> </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># 分支改为master代表主分支</span></span><br></pre></td></tr></table></figure><p><strong>2.2.3 代码部署</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令部署，将代码部署到Github</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  <span class="comment"># Git BASH终端</span></span><br><span class="line">hexo clean; hexo generate; hexo deploy  <span class="comment"># WebStorm终端</span></span><br></pre></td></tr></table></figure><ul><li><code>hexo clean</code>&#x2F; <code>hexo cl</code>：删除之前生成的文件，若未生成过静态文件，可忽略此命令</li><li><code>hexo generate</code> &#x2F; <code>hexo g</code>：生成静态文件</li><li><code>hexo deploy</code> &#x2F; <code>hexo d</code>：部署文章</li></ul><p><strong>2.2.4 浏览器访问</strong></p><p>稍等两分钟，浏览 <code>&lt;GitHub 用户名&gt;.github.io</code> 检查你的网站能否运作。</p><h2 id="3-Vercel部署"><a href="#3-Vercel部署" class="headerlink" title="3.Vercel部署"></a>3.Vercel部署</h2><p><code>Vercel</code> 是一个网站托管服务平台，开发者可以将自己的网络应用部署、托管在平台上运行。它能够托管你的静态html界面，甚至能够托管你的node.js与Python服务端脚本。</p><h3 id="3-1-Vercel账户与Github账户关联"><a href="#3-1-Vercel账户与Github账户关联" class="headerlink" title="3.1 Vercel账户与Github账户关联"></a>3.1 Vercel账户与Github账户关联</h3><p>Vercel账号与Github账户关联(没有Vercel账号的可以在<a href="https://vercel.com/dashboard">Vercel官网</a>创建一个)</p><h3 id="3-2-项目关联"><a href="#3-2-项目关联" class="headerlink" title="3.2 项目关联"></a>3.2 项目关联</h3><ul><li><p>点击右上角的<code>Add New Project</code>创建新的项目</p></li><li><p>找到自己Github账号静态博客的仓库<code>&lt;username&gt;.github.io</code>进行<code>Import</code>操作</p></li><li><p>自定义项目名称(数字+字母+连字符)，然后其他默认，点击<code>Deploy</code>部署</p></li></ul><p><img src="/images/article/hexo/vercel-1.png"><br><img src="/images/article/hexo/vercel-2.png"></p><h3 id="3-3-绑定自定义域名"><a href="#3-3-绑定自定义域名" class="headerlink" title="3.3 绑定自定义域名"></a>3.3 绑定自定义域名</h3><p><code>View Domains</code>查看当前域，输入框中输入自己购买的域名后<code>Add</code>添加。</p><p><img src="/images/article/hexo/vercel%E5%9F%9F%E5%90%8D-1.png"></p><p>在阿里云域名解析记录里面添加记录，记录类型对应<code>Type</code>，主机记录对应<code>Name</code>，记录值对应<code>Value</code>，其他默认。</p><p><font color=red>注意：当绑定新域名后，需同步修改<code>_config.yml</code>文件中的<code>url</code>配置项为自己的新域名</font></p><p>之后就可以访问自定义的域名来浏览博客啦~</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">&lt;自定义的新域名&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-Butterfly主题安装与应用"><a href="#4-Butterfly主题安装与应用" class="headerlink" title="4.Butterfly主题安装与应用"></a>4.Butterfly主题安装与应用</h2><h3 id="4-1-主题安装"><a href="#4-1-主题安装" class="headerlink" title="4.1 主题安装"></a>4.1 主题安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm 安装</span></span><br><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>命令执行安装后，可在项目的依赖包文件夹<code>node_modules</code>下找到该主题<code>hexo-theme-butterfly</code>文件夹</p><h3 id="4-2-主题应用"><a href="#4-2-主题应用" class="headerlink" title="4.2 主题应用"></a>4.2 主题应用</h3><ul><li>修改<code>_config.yml</code>文件中的<code>theme</code>配置项改为<code>butterfly</code>。</li><li>安装Butterfly主题必需的渲染依赖</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br><span class="line"><span class="comment"># 主题的渲染依赖</span></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><blockquote><p>建议：</p><p>将依赖包中主题文件夹中的 <code>_config.yml</code> 复制到 Hexo 根目录里 且 重命名为 <code>_config.butterfly.yml</code>，之后只需操作 <code>_config.butterfly.yml</code>即可。</p><p><font size=2>Hexo会自动合并主题中的<code>_config.yml</code>和 <code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</font></p></blockquote><h2 id="5-写作——博客文章书写"><a href="#5-写作——博客文章书写" class="headerlink" title="5.写作——博客文章书写"></a>5.写作——博客文章书写</h2><p><a href="https://hexo.io/zh-cn/docs/writing">参考__官方文档</a></p><p>我们在<code>source/_posts</code>文件夹下新建<code>.md</code>文件进行文章的编辑操作</p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p><code>Front-matter</code> 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line"><span class="section">date:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述 []符号代表非必需</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>文章标题</td><td>文章的文件名</td></tr><tr><td>date</td><td>文章创建日期</td><td>文章建立日期</td></tr><tr><td>updated</td><td>[文章更新日期]</td><td>文件更新日期</td></tr><tr><td>tags</td><td>[文章标签]</td><td></td></tr><tr><td>categories</td><td>[文章分类]</td><td></td></tr><tr><td>keywords</td><td>[文章关键字]</td><td></td></tr><tr><td>description</td><td>[文章描述]</td><td></td></tr><tr><td>top_img</td><td>[文章顶部图片]</td><td></td></tr><tr><td>cover</td><td>[文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false&#x2F;图片地址&#x2F;留空)]</td><td></td></tr><tr><td>comments</td><td>[开启文章评论功能]</td><td>true</td></tr><tr><td>aside</td><td>[显示侧边栏]</td><td>true</td></tr><tr><td>highlight_shrink</td><td>[配置代码框是否展开(true&#x2F;false)]</td><td>wen默认为设置中highlight_shrink的配置</td></tr></tbody></table><h3 id="文章链接优化——abblink"><a href="#文章链接优化——abblink" class="headerlink" title="文章链接优化——abblink"></a>文章链接优化——abblink</h3><p>hexo博客的文章URL格式是在<code>_config.yml</code>下配置<code>permalink</code>，默认格式为：:year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;，此处介绍abblink插件，避免URL出现中文以及暴露日期文章名称等。</p><p>首先，安装<strong>hexo-abbrlink</strong>插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>然后修改站点配置文件<code>_config.yml</code>，当使用<code>hexo g</code>后会自动在文章中加上abbrlink</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">permalink: article/:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  rep: hex    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure><h2 id="6-Butterfly主题配置"><a href="#6-Butterfly主题配置" class="headerlink" title="6.Butterfly主题配置"></a>6.Butterfly主题配置</h2><p>Butterfly主题相关配置在<code>_config.butterfly.yml</code>中进行</p><h3 id="文章置顶与封面"><a href="#文章置顶与封面" class="headerlink" title="文章置顶与封面"></a>文章置顶与封面</h3><p><strong>【置顶】</strong><br>可以直接在文章的<strong>front-matter</strong>区域里添加<code>sticky: 1</code>属性来把这篇文章置顶。数值越大，置顶的优先级越大。<br><strong>【封面】</strong><br>文章的 markdown 文档上,在 <strong>Front-matter</strong> 添加 <code>cover</code> ,并填上要显示的图片地址。</p><h3 id="网站图标更换"><a href="#网站图标更换" class="headerlink" title="网站图标更换"></a>网站图标更换</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Favicon（网站图标）</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/img/xxx.png</span></span><br></pre></td></tr></table></figure><p>图片自定义，并且修改配置文件<code>_config.butterfly.yml</code>后，需要在依赖包对应的主题文件夹的相对路径下添加此图片，此处的添加路径为<br><code>node_modules/hexo-theme-butterfly/source/img</code> 添加<code>xx.png</code>表示网站图标。</p><h1 id="Hexo博客部署命令"><a href="#Hexo博客部署命令" class="headerlink" title="Hexo博客部署命令"></a><a href="https://butterfly.js.org/">Hexo博客</a>部署命令</h1><h2 id="本地部署与线上部署"><a href="#本地部署与线上部署" class="headerlink" title="本地部署与线上部署"></a>本地部署与线上部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地</span></span><br><span class="line">hexo cl; hexo s</span><br><span class="line"><span class="comment"># 线上</span></span><br><span class="line">hexo clean; hexo g; hexo d</span><br></pre></td></tr></table></figure><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
